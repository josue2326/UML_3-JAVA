/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package yFrame;

import Class.Keyboard;
import Class.Monitor;
import Class.Mouse;
import java.util.ArrayList;
import javax.swing.JOptionPane;


/**
 *
 * @author josue
 */
public class Carro_Compras extends javax.swing.JFrame {

    /**
     * Creates new form Carro_Compras
     */
    public Carro_Compras() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCompra = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jBMinimizar = new javax.swing.JButton();
        jBBackToinicio1 = new javax.swing.JButton();
        jlBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/pagar OFF.png"))); // NOI18N
        jCompra.setBorder(null);
        jCompra.setBorderPainted(false);
        jCompra.setContentAreaFilled(false);
        jCompra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCompra.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/PAGAR on.png"))); // NOI18N
        jCompra.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/PAGAR on.png"))); // NOI18N
        jCompra.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/PAGAR on.png"))); // NOI18N
        jCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCompraMouseClicked(evt);
            }
        });
        jPanel1.add(jCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 410, 130, 40));

        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/quitar OFF.png"))); // NOI18N
        Eliminar.setBorder(null);
        Eliminar.setBorderPainted(false);
        Eliminar.setContentAreaFilled(false);
        Eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Eliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/quitar ON.png"))); // NOI18N
        Eliminar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/quitar ON.png"))); // NOI18N
        Eliminar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/StoreImages/quitar ON.png"))); // NOI18N
        Eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminarMouseClicked(evt);
            }
        });
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPanel1.add(Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, 130, 40));

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total a Pagar");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, 40));

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Articulos a Comprar");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, 40));

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0)));
        jTextArea2.setCaretColor(new java.awt.Color(0, 0, 0));
        jTextArea2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea2.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextArea2.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 330, -1));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(9, 9, 9));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        jTextArea1.setCaretColor(new java.awt.Color(9, 9, 9));
        jTextArea1.setDisabledTextColor(new java.awt.Color(9, 9, 9));
        jTextArea1.setSelectedTextColor(new java.awt.Color(9, 9, 9));
        jTextArea1.setSelectionColor(new java.awt.Color(9, 9, 9));
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 330, 410));

        jBMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Expand_Arrow_32px.png"))); // NOI18N
        jBMinimizar.setBorder(null);
        jBMinimizar.setBorderPainted(false);
        jBMinimizar.setContentAreaFilled(false);
        jBMinimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBMinimizarMouseClicked(evt);
            }
        });
        jPanel1.add(jBMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 40, 40));

        jBBackToinicio1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Home_32px.png"))); // NOI18N
        jBBackToinicio1.setBorder(null);
        jBBackToinicio1.setBorderPainted(false);
        jBBackToinicio1.setContentAreaFilled(false);
        jBBackToinicio1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBackToinicio1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBBackToinicio1MouseClicked(evt);
            }
        });
        jPanel1.add(jBBackToinicio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 40, 40));

        jlBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Loginbueno.png"))); // NOI18N
        jPanel1.add(jlBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBackToinicio1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBBackToinicio1MouseClicked
        Inicio inicio = new Inicio();
        dispose(); // Cierra la ventana de login
        inicio.setVisible(true);
    }//GEN-LAST:event_jBBackToinicio1MouseClicked

    private void jBMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBMinimizarMouseClicked
        this.setState(yFrame.Login.ICONIFIED);
    }//GEN-LAST:event_jBMinimizarMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    // Obtenemos la lista de mouses
    ArrayList<Mouse> mouses = Mouses.getMouses();
    StringBuilder texto = new StringBuilder(); // Usamos StringBuilder para construir el texto

    // Verificar y agregar mouses al texto
    if (mouses != null && !mouses.isEmpty()) {
        for (Mouse mouse : mouses) {
            texto.append(mouse.getNombre()).append("___________________").append(mouse.getPrecio()).append("$\n");
        }
    } else {
        texto.append("");
    }

    // Obtenemos la lista de teclados
    ArrayList<Keyboard> teclados = Teclados1.getteclados();

    // Verificar y agregar teclados al texto
    if (teclados != null && !teclados.isEmpty()) {
        for (Keyboard teclado : teclados) {
            texto.append(teclado.getNombre()).append("___________________").append(teclado.getPrecio()).append("$\n");
        }
    } else {
        texto.append("");
    }

    // Obtenemos la lista de monitores
    ArrayList<Monitor> monitors = Monitores.getmonitors();

    // Verificar y agregar monitores al texto
    if (monitors != null && !monitors.isEmpty()) {
        for (Monitor monitor : monitors) {
            texto.append(monitor.getNombre()).append("___________________").append(monitor.getPrecio()).append("$\n");
        }
    } else {
        texto.append("");
    }

    // Asignamos el texto construido al JTextArea
    jTextArea1.setText(texto.toString());

    // Calcular el total a pagar
    double s1 = 0, s2 = 0, s3 = 0, st;

    if (mouses != null) {
        for (Mouse mouse : mouses) {
            s1 += mouse.getPrecio();
        }
    }

    if (teclados != null) {
        for (Keyboard teclado : teclados) {
            s2 += teclado.getPrecio();
        }
    }

    if (monitors != null) {
        for (Monitor monitor : monitors) {
            s3 += monitor.getPrecio();
        }
    }

    st = s1 + s2 + s3;

    // Asignar el total a pagar al JTextArea2
    jTextArea2.setText("Total: " + st + "$");

    
    }//GEN-LAST:event_formWindowOpened

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EliminarActionPerformed

    private void EliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarMouseClicked
        boolean continuar = true;
        ArrayList<Keyboard> teclados = Teclados1.getteclados();
        ArrayList<Mouse> mouses = Mouses.getMouses();
        ArrayList<Monitor> monitors = Monitores.getmonitors();

        while (continuar) {
            String opcion = "------ Opciones ------\n" + "1. Eliminar Teclado\n" + "2. Eliminar Mouse\n" + "3. Eliminar Monitor\n" + "4. Salir";
            int des = Integer.parseInt(JOptionPane.showInputDialog(opcion));

            boolean encontrado = false;

            switch (des) {
                case 1:
                    String modeloT = JOptionPane.showInputDialog("Digite el modelo del teclado a quitar");
                    for (Keyboard teclado : teclados) {
                        if (teclado.getNombre().equals(modeloT)) {
                            teclados.remove(teclado);
                            encontrado = true;

                            // Refrescar
                            Carro_Compras carrito = new Carro_Compras();
                            dispose();
                            carrito.setVisible(true);

                            JOptionPane.showMessageDialog(null, "El teclado: " + teclado.getNombre() + " fue eliminado correctamente");
                            break;
                        }
                    }
                    if (!encontrado) {
                        JOptionPane.showMessageDialog(null, "Artículo no adquirido");
                    }
                    break;

                case 2:
                    String modeloM = JOptionPane.showInputDialog("Digite el modelo del mouse a quitar");
                    for (Mouse raton : mouses) {
                        if (raton.getNombre().equals(modeloM)) {
                            mouses.remove(raton);
                            encontrado = true;

                            // Refrescar
                            Carro_Compras carrito = new Carro_Compras();
                            dispose();
                            carrito.setVisible(true);

                            JOptionPane.showMessageDialog(null, "El mouse: " + raton.getNombre() + " fue eliminado correctamente");
                            break;
                        }
                    }
                    if (!encontrado) {
                        JOptionPane.showMessageDialog(null, "Artículo no adquirido");
                    }
                    break;

                case 3:
                    String modeloMo = JOptionPane.showInputDialog("Digite el modelo del monitor a quitar");
                    for (Monitor monitor : monitors) {
                        if (monitor.getNombre().equals(modeloMo)) {
                            monitors.remove(monitor);
                            encontrado = true;

                            // Refrescar
                            Carro_Compras carrito = new Carro_Compras();
                            dispose();
                            carrito.setVisible(true);

                            JOptionPane.showMessageDialog(null, "El monitor: " + monitor.getNombre() + " fue eliminado correctamente");
                            break;
                        }
                    }
                    if (!encontrado) {
                        JOptionPane.showMessageDialog(null, "Artículo no adquirido");
                    }
                    break;

                case 4:
                    continuar = false;
                    JOptionPane.showMessageDialog(null, "Saliendo del menú");
                    break;

                default:
                    JOptionPane.showMessageDialog(null, "Opción no válida, intente nuevamente");
                    break;
            }
        }
    }//GEN-LAST:event_EliminarMouseClicked

    private void jCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCompraMouseClicked
         // Obtener listas de productos
    ArrayList<Mouse> mouses = Mouses.getMouses();
    ArrayList<Keyboard> teclados = Teclados1.getteclados();
    ArrayList<Monitor> monitors = Monitores.getmonitors();

    // Verificar si el carrito está vacío
    if ((mouses == null || mouses.isEmpty()) && (teclados == null || teclados.isEmpty()) && (monitors == null || monitors.isEmpty())) {
        JOptionPane.showMessageDialog(null, "El carrito está vacío. No hay productos para comprar.");
        return;
    }

    // Construir el resumen de compra
    StringBuilder resumen = new StringBuilder("Resumen de Compra:\n\n");

    double total = 0.0;

    if (mouses != null && !mouses.isEmpty()) {
        resumen.append("Mouses:\n");
        for (Mouse mouse : mouses) {
            resumen.append(mouse.getNombre()).append(" - ").append(mouse.getPrecio()).append("$\n");
            total += mouse.getPrecio();
        }
    }

    if (teclados != null && !teclados.isEmpty()) {
        resumen.append("\nTeclados:\n");
        for (Keyboard teclado : teclados) {
            resumen.append(teclado.getNombre()).append(" - ").append(teclado.getPrecio()).append("$\n");
            total += teclado.getPrecio();
        }
    }

    if (monitors != null && !monitors.isEmpty()) {
        resumen.append("\nMonitores:\n");
        for (Monitor monitor : monitors) {
            resumen.append(monitor.getNombre()).append(" - ").append(monitor.getPrecio()).append("$\n");
            total += monitor.getPrecio();
        }
    }

    resumen.append("\nTotal a pagar: ").append(total).append("$");

    // Mostrar el resumen de compra y confirmar la compra
    int confirmacion = JOptionPane.showConfirmDialog(null, resumen.toString(), "Confirmar Compra", JOptionPane.YES_NO_OPTION);

    if (confirmacion == JOptionPane.YES_OPTION) {
        // Simular el proceso de pago
        JOptionPane.showMessageDialog(null, "Procesando el pago...");

        // Vaciar el carrito
        mouses.clear();
        teclados.clear();
        monitors.clear();

        // Refrescar la ventana
        Carro_Compras carrito = new Carro_Compras();
        dispose();
        carrito.setVisible(true);

        // Confirmar que la compra se ha realizado
        JOptionPane.showMessageDialog(null, "Compra realizada con éxito. ¡Gracias por su compra!");
    } else {
        JOptionPane.showMessageDialog(null, "Compra cancelada.");
    }
    }//GEN-LAST:event_jCompraMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carro_Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carro_Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carro_Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carro_Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carro_Compras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton jBBackToinicio1;
    private javax.swing.JButton jBMinimizar;
    private javax.swing.JButton jCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel jlBackground;
    // End of variables declaration//GEN-END:variables
}
